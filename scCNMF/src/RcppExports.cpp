// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// eps
double eps(double a);
RcppExport SEXP _scCNMF_eps(SEXP aSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    rcpp_result_gen = Rcpp::wrap(eps(a));
    return rcpp_result_gen;
END_RCPP
}
// Cvar2
double Cvar2(NumericVector AA, double Mean, int length);
RcppExport SEXP _scCNMF_Cvar2(SEXP AASEXP, SEXP MeanSEXP, SEXP lengthSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type AA(AASEXP);
    Rcpp::traits::input_parameter< double >::type Mean(MeanSEXP);
    Rcpp::traits::input_parameter< int >::type length(lengthSEXP);
    rcpp_result_gen = Rcpp::wrap(Cvar2(AA, Mean, length));
    return rcpp_result_gen;
END_RCPP
}
// scCNMF_cpp_function
Rcpp::List scCNMF_cpp_function(Eigen::Map<Eigen::MatrixXd> X1, Eigen::Map<Eigen::MatrixXd> X2, Eigen::Map<Eigen::MatrixXd> Reg, int K, int maxIter, int stop_rule, double alpha, double beta, double gamma, Eigen::Map<Eigen::MatrixXd> W10, Eigen::Map<Eigen::MatrixXd> W20, Eigen::Map<Eigen::MatrixXd> W30, Eigen::Map<Eigen::MatrixXd> H0, Eigen::Map<Eigen::MatrixXd> θ0, Eigen::Map<Eigen::MatrixXd> O0, NumericVector c1, NumericVector c2, NumericVector Reg_w, int core);
RcppExport SEXP _scCNMF_scCNMF_cpp_function(SEXP X1SEXP, SEXP X2SEXP, SEXP RegSEXP, SEXP KSEXP, SEXP maxIterSEXP, SEXP stop_ruleSEXP, SEXP alphaSEXP, SEXP betaSEXP, SEXP gammaSEXP, SEXP W10SEXP, SEXP W20SEXP, SEXP W30SEXP, SEXP H0SEXP, SEXP θ0SEXP, SEXP O0SEXP, SEXP c1SEXP, SEXP c2SEXP, SEXP Reg_wSEXP, SEXP coreSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd> >::type X1(X1SEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd> >::type X2(X2SEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd> >::type Reg(RegSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< int >::type stop_rule(stop_ruleSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd> >::type W10(W10SEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd> >::type W20(W20SEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd> >::type W30(W30SEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd> >::type H0(H0SEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd> >::type θ0(θ0SEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd> >::type O0(O0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type c1(c1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type c2(c2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Reg_w(Reg_wSEXP);
    Rcpp::traits::input_parameter< int >::type core(coreSEXP);
    rcpp_result_gen = Rcpp::wrap(scCNMF_cpp_function(X1, X2, Reg, K, maxIter, stop_rule, alpha, beta, gamma, W10, W20, W30, H0, θ0, O0, c1, c2, Reg_w, core));
    return rcpp_result_gen;
END_RCPP
}
// Fold_RE_TG_MultiAdjustCore
NumericMatrix Fold_RE_TG_MultiAdjustCore(NumericMatrix X1, NumericMatrix X2, NumericMatrix GeneLoc, NumericMatrix PeakLoc);
RcppExport SEXP _scCNMF_Fold_RE_TG_MultiAdjustCore(SEXP X1SEXP, SEXP X2SEXP, SEXP GeneLocSEXP, SEXP PeakLocSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type X1(X1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type X2(X2SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type GeneLoc(GeneLocSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type PeakLoc(PeakLocSEXP);
    rcpp_result_gen = Rcpp::wrap(Fold_RE_TG_MultiAdjustCore(X1, X2, GeneLoc, PeakLoc));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_scCNMF_eps", (DL_FUNC) &_scCNMF_eps, 1},
    {"_scCNMF_Cvar2", (DL_FUNC) &_scCNMF_Cvar2, 3},
    {"_scCNMF_scCNMF_cpp_function", (DL_FUNC) &_scCNMF_scCNMF_cpp_function, 19},
    {"_scCNMF_Fold_RE_TG_MultiAdjustCore", (DL_FUNC) &_scCNMF_Fold_RE_TG_MultiAdjustCore, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_scCNMF(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
